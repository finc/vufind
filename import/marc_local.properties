###############################################################################
# marc_local.properties -- local overrides to standard VuFind MARC mappings.  #
#                          All settings in this file override equivalent      #
#                          settings in marc.properties.                       #
###############################################################################

# Uncomment the following settings to insert appropriate values for your site:
#collection = "Catalog"
#institution = "MyInstitution"
#building = "Library A"

# Uncomment the following settings to use the .bsh scripts in import/scripts/
# instead of the built-in SolrMarc functionality found in the .jar file.
# (by default, the scripts have the same behavior as the built-in functions,
# but the external scripts are easier to customize to your needs).
#format = script(format.bsh), getFormat, format_map.properties
#callnumber-subject = script(callnumber.bsh), getCallNumberSubject(090a:050a), callnumber_subject_map.properties
#callnumber-label = script(callnumber.bsh), getCallNumberLabel(090a:050a)
#publisher = script(getpublishers.bsh), getPublishers
#publishDate = script(getdate.bsh), getDates
#illustrated = script(illustrated.bsh), isIllustrated
#dewey-hundreds = script(dewey.bsh), getDeweyNumber(082a:083a, 100), ddc22_map.properties(hundreds)
#dewey-tens = script(dewey.bsh), getDeweyNumber(082a:083a, 10), ddc22_map.properties(tens)
#dewey-ones = script(dewey.bsh), getDeweyNumber(082a:083a, 1), ddc22_map.properties(ones)
#dewey-full = script(dewey.bsh), getDeweySearchable(082a:083a)
#dewey-sort = script(dewey.bsh), getDeweySortable(082a:083a)

# Uncomment the following lines to track history of indexing times for RSS feeds,
# OAI-PMH server and other updates.  The parameter to these functions must be the
# same fieldspec as the id setting above!
# IMPORTANT: Indexing this extra information will make extra database calls during
#            the indexing process and will likely slow things down significantly.
#first_indexed = custom, getFirstIndexed(001)
#last_indexed = custom, getLastIndexed(001)

# Uncomment the following line to index full text from URLs found in your MARC
# records.  All sorts of document formats are supported (PDF, Word Doc, ASCII
# text, HTML, etc.) The first parameter is a fieldspec showing which fields to use
# for URL retrieval.  The second parameter is optional -- if included, only files
# matching the specified suffix will be indexed.  Note that this functionality
# depends on a full text tool being installed on your system.  See the wiki for
# details:
#       https://vufind.org/wiki/indexing:full_text_tools
#fulltext = custom, getFulltext(856u, pdf)

# Uncomment the following line if you want to index latitude/longitude data for
# Google Map recommendations:
#long_lat = custom, getLongLat

# Uncomment the following lines if you are indexing journal article data that uses
# the 773 field to describe the journal containing the article.  These settings
# assume the records have been formatted according to recommendation 4.1 found at:
#     http://www.loc.gov/marc/marbi/2003/2003-dp01.html
# If you have records using a different 773 format, you may need to write a custom
# indexing script to parse out volume/issue/number.
# Additionally, you will need to make sure articles have a format value of "Article."
# You can hard-code this if all of your records are articles, but if you need to
# distinguish between articles and non-articles, you will need to build a custom
# getFormat script.
#format = "Article"
#container_volume = 773v
#container_issue = 773l
#container_start_page = 773q
#container_reference = 773g
#container_title = 773s

##############################################
# finc-spezifisch, bibliotheksuebergreifend

# ID des Datensatzes innerhalb der Quelle
record_id = 980a
# ID der Quelle
source_id = 980b
# bibliographic level
mrc0007=000[7]
# category of material
# mrc0070=007[0] first
# collection / source_name
mega_collection = script(mega_collection.bsh), getMegaCollection(), collection_map.properties
authorized_mode = "true"
# ISIL / internationales Bibiothekssigel
# institution = 852a
institution = script(getInstitution.bsh), getInstitution()
rsn = 983a
# Zugangsfacette - Unterscheidung zw. Online-Ressourcen und lokalen Bestaenden
access_facet = script(format.bsh), getFormat, access_map.properties
# IDs fuer Personen und Schlagw\u00c3\u00b6rter (Normdatenerweiterung)
author_id = script(getFieldRegex.bsh), getFieldRegex("100:110:111:700:710:711","0","^\\(DE\\-588\\).*$","\\(DE\\-588\\)","")
topic_id = script(getFieldRegex.bsh), getFieldRegex("600:610:611:648:650:651:689","0","^\\(DE\\-588\\).*$","\\(DE\\-588\\)","")
# Normdaten :: Verweisungsformen
author_ref = 900a
author_corp_ref = 910a:911a
topic_ref = 950a
# MBW und Serien (..., #2063, #2418)
multipart_set = 000[19]
# multipart_set = 000[19]:000[7], multipart_set.properties, first
multipart_link = 773w[8-16]:800w[8-16]:810w[8-16]:811w[8-16]:830w[8-16]:8306
multipart_part = script(getSuperMP.bsh), getSuperMP("773q:800q:800g:773g:800v:810v:811v:830v:830g")
# Erwerbungsinformation (#959)
purchase = script(purchaseInfo.bsh), purchaseInfo()

##############################################
# finc-spezifisch UND bibliotheksspezifisch

# Sammelfeld fuer bibliotheksspezifische Informationen; Bsp. DE-CH1: Lizenzinformationen
# misc_de15 = xxx
misc_del152 = script(misc_del152.bsh), misc_del152
misc_dech1 = 971g
# misc-Feld f\u00fcr die TUF, enth\u00e4lt den Libero-Code f\u00fcr den Medientyp
# (zur Darstellung der Icons in der Ergebnisliste)
# misc_de105 = 972c # redundant to format_de105
# misc_de520 = xxx
# misc_del189 = xxx
# misc_dezwi2 = xxx
# misc_dezi4 = xxx
# misc_ded117 = xxx
# misc_de540 = xxx
# misc_del242 = xxx
# Zweigbibliothek - Kommentar entfernen, wenn Facettierung gewuenscht
branch_de15 = script(getBranches.bsh), getBranches("^DE-15(-.+)?$"), branch_map_de15.properties
# CH1 971a
branch_dech1 = script(getBranches.bsh), getBranches("^DE-Ch1$"), branch_map_dech1.properties
# DE105 972a
branch_de105 = script(getBranches.bsh), getBranches("^DE-105$"), branch_map_de105.properties
branch_de520 = script(getBranches.bsh), getBranches("^DE-520$"), branch_map_de520.properties
# branch_del189 = 974a
# branch_dezwi2 = 975a
branch_dezwi2 = script(getBranches.bsh), getBranches("^DE-Zwi2$"), branch_map_dezwi2.properties
branch_dezi4 = script(getBranches.bsh), getBranches("^DE-Zi4$"), branch_map_dezi4.properties
# branch_dezi4 = 976a
# branch_ded117 = 977a
# branch_de540 = 978a
# branch_del242 = 979a
# Standort/Literaturabteilung - Kommentar entfernen, wenn Facettierung gewuenscht
collcode_de15 = 969b, collcode_map_de15.properties
#collcode_dech1 = 971b, collcode_map_dech1.properties
collcode_dech1 = script(getCollCode.bsh), getCollCodes(DE-Ch1), collcode_map_dech1.properties
#collcode_de105 = 972b, collcode_map_de105.properties
collcode_de105 = script(getCollCode.bsh), getCollCodes(DE-105), collcode_map_de105.properties
collcode_de520 = script(getCollCode.bsh), getCollCodes(DE-520), collcode_map_de520.properties
# collcode_del189 = 974b
collcode_dezwi2 = script(getCollCode.bsh), getCollCodes(DE-Zwi2), collcode_map_dezwi2.properties
# In Zittau basieren Zweigstelle und Collection Code auf den Libero-Zweigstellen, deshalb
# verwenden wir ein Skript f\u00fcr beide Felder
collcode_dezi4 = script(getBranches.bsh), getBranches("^DE-Zi4$"), collcode_map_dezi4.properties
# collcode_dezi4 = 976b
# collcode_ded117 = 977b
# collcode_de540 = 978b
# collcode_del242 = 979b
# Format/Medientyp - Kommentar entfernen, wenn individuelle Formatfacettierung erwuenscht
format_de15 = script(format.bsh), getFormat, format_map_de15.properties
format_del152 = 970c, format_map_del152.properties(del152)
# dech1 nutzt ubl formate vgl https://intern.finc.info/issues/2086#note-7
format_dech1 = 971c, format_map_dech1.properties(dech1)
format_de105 = script(format_de105.bsh),getFormat,format_map_de105.properties(de105)
format_de520 = 973c, format_map_de520.properties
format_del189 = script(format.bsh), getFormat, format_map_del189.properties
format_dezwi2 = 975c, format_map_dezwi2.properties
format_dezi4 = 976c:980b, format_map_dezi4.properties
format_de540 = script(format.bsh), getFormat, format_map_de540.properties
format_ded117 = script(format.bsh), getFormat, format_map_ded117.properties
# format_ded117 = 977c, format_map_ded117.properties
# format_de540 = 978c, format_map_de540.properties
# format_del242 = 979c, format_map_del242.properties
# HMT # local subject headings
local_heading_facet_del152 = 970d
# WHZ (Zwickau) Lokales Schlagwort aus PICA 6800, BSZ-MARC-LOKAL 689 $a
local_heading_dezwi2 = 975q
local_heading_facet_dezwi2 = 975q:600a:600x:610a:610x:611a:611x:630a:630x:648x:650a:650x:651x:655x:689a
# TUBAF und HTWK # UDK fuer Anzeige und Facette
udk_raw_de105 = 972f
udk_facet_de105 = 972f, tuf_udk_map.properties(tuf_udk)
udk_raw_del189 = 974f
# HTWK will keine UDK-Facette
# udk_facet_del189 = 974f, htwk_udk_map.properties(htwk_udk)
# HGB Lokales Schlagwort aus PICA 6800, BSZ-MARC-LOKAL 689 $a
local_heading_del242 = 979q
# HGB Lokale Notation aus PICA 6700, BSZ-MARC-LOKAL 936 $a. Und Ausschrift aus 979|9 Ticket #4209
local_class_del242 = 979f:9799
# UBL # finc-Klassifikation
finc_class_facet = script(finc_class.bsh), getFincClass()

##############################################
# allgemeingueltig

# allfields without urls (856)
allfields = custom, getAllSearchableFields(100, 831)
zdb = script(zdb.bsh), getZdb
format = script(format.bsh), getFormat
language = 008[35-37]:041a:041d:041h:130l:730l, language_map.properties
author = 100abcd
author_orig = custom, getLinkedField(100abcd)
author2 = 700abcd
author2_orig = custom, getLinkedField(700abcd)
author_corp = 110ab:111acde
author_corp_orig = custom, getLinkedField(110ab:111acde)
author_corp2 = 710ab:711acde
author_corp2_orig = custom, getLinkedField(710ab:711acde)
author2-role = 700e:710e
# author_fuller = 100q
author_letter = 100a
# author_additional = 505r
# fuer gemeinsame Facette von Verfasser, beteiligten Personen u. Koerperschaften
author_facet = 100abcd:700abcd:110ab:111acde:710ab:711acde
title = 245ab
title_part = 245np
title_sub = 245b first
title_short = 245a
# title_full = custom, getAllSubfields(245, " ")
# keine Verfasserwiederholung mehr in title_full
title_full = 245abdefgknp
title_alt = custom, getLinkedFieldCombined(130ap:240ap:246abp:730ap:740ap:920t)
# musikalische EST
title_uniform = 130adfgklmnoprst:240adfghklmnoprs
title_old = 780ast
title_new = 785ast
title_sort = custom, getSortableTitle
title_orig = custom, getLinkedField(245abnp)
series = 800abcdefgmnopqt:810abcdefgmnoprst:811acdegjnpqstuv:830adgmnoprst
series2 = 490a
series_orig = custom, getLinkedField(800abcdefgmnopqt:810abcdefgmnoprst:811acdegjnpqstuv:830adgmnoprst:490a)
publisher = custom, getLinkedFieldCombined(260b)
# publishDate = script(getdate.bsh), getDate
publishDate = custom, removeTrailingPunct(260c)
# publishDateSort = 008[7-10]
publishDateSort = script(getPublishDateSort.bsh), getPublishDateSort
publishPlace = custom, getLinkedFieldCombined(260a)
imprint = 260abc, first
# imprint = custom, removeTrailingPunct(260abc), first
physical = custom, getLinkedFieldCombined(300abcefg)
footnote = custom, getLinkedFieldCombined(500a)
dissertation_note = custom, getLinkedFieldCombined(502abcd)
performer_note = 511a
illustrated = script(illustrated.bsh), isIllustrated
contents = custom, getLinkedFieldCombined(505agrt:520ab)
# Uncomment the following line to index full text from URLs found in your MARC
# records.  All sorts of document formats are supported (PDF, Word Doc, ASCII
# text, HTML, etc.) The first parameter is a fieldspec showing which fields to use
# for URL retrieval.  The second parameter is optional -- if included, only files
# matching the specified suffix will be indexed.  Note that this functionality
# depends on Aperture being installed on your system.  See the wiki for details:
#      http://vufind.org/wiki/aperture
# old version: fulltext = custom, getFulltext(856u, pdf)
# fulltext = script(getFincFulltext.bsh), getFincFulltext
fulltext = script(getFincFulltextSwbp.bsh), getFincFulltextSwbp
# fulltext_inh = script(swbplus.bsh), getSWBPlusText(001[10-18],inh)
isbn = 020a:776z:780z:785z
# NOTE: 029a ist \u00c3\u00bcberregional definiertes, anwenderspezifisches Feld, kein MARC-Standard
issn = 022a:029a:490x:730x:776x:780x:785x:800x:810x:811x:830x
# ismn = 024a
ismn = script(ismn.bsh), getIsmn
isbn_canc = 020z
issn_canc = 022yz
# topic enthaelt 970de f\u00c3\u00bcr lokale SW der HMT und 937abc f\u00c3\u00bcr Filmgattungen
topic = 600abcdefghjklmnopqrstuvxyz:610abcdefghklmnoprstuvxyz:611acdefghjklnpqstuvxyz:630adefghklmnoprstvxyz:650abcdevxyz:689a:655abvxyz:651avxyz:648avxyz:970de:937abc
topic_facet = 600a:600x:610a:610x:611a:611x:630a:630x:648x:650a:650x:651x:655x:689a
# fuer Geofacette #1028
geogr_code = script(geogr_code.bsh), getGeogrCode, geogr_code_map.properties
# fuer Geographische Codes f\u00c3\u00bcr Personen (HMT) #1567
geogr_code_person = 951b, geogr_code_map.properties
# fuer Facette Zeitcode HMT #1571
timecode = 046j, timecode_map.properties
# fuer Suche in separatem Feld, Indexfunktion, fuer Browsing ggf. noch aufsplitten (Ticket #284)
music_heading = 937def
# fuer Facettierung der Filmgattungen
film_heading = 937a
dewey-hundreds = script(dewey.bsh), getDeweyNumber(082a:083a, 100), ddc22_map.properties(hundreds)
dewey-tens = script(dewey.bsh), getDeweyNumber(082a:083a, 10), ddc22_map.properties(tens)
dewey-ones = script(dewey.bsh), getDeweyNumber(082a:083a, 1), ddc22_map.properties(ones)
dewey-full = script(dewey.bsh), getDeweySearchable(082a:083a)
dewey-sort = script(dewey.bsh), getDeweySortable(082a:083a)
dewey-raw = 082a:083a, first
# RVK - Notation fuer Facette und Ausschrift zur Einbindung in die Suche
rvk_facet = script(rvk.bsh), getRvk
rvk_label = 936k
rvk_path = 0849
# GND = script(getGnd.bsh), getGnd
# Uncomment the following lines to track history of indexing times for RSS feeds,
# OAI-PMH server and other updates.  The parameter to these functions must be the
# same fieldspec as the id setting above!
# IMPORTANT: Indexing this extra information will make extra database calls during
#           the indexing process and will likely slow things down significantly.
# first_indexed = custom, getFirstIndexed(001)
# last_indexed = custom, getLastIndexed(001)

# Ticket #2048
attached_de15 = script(attached_DE-15.bsh), getAttached()

# Ticket #2648, #3962
itemdata = script(getItemDataJSON.bsh), getItemDataJSON

# Ticket #3962, Barcode und Signatur aus MARC entfernen. Daten kommen jetzt aus mddb
# Maskiere '(', ')' und '.'.  '[' und ']' auch? Viel Gl\u00fcck. Aber Testen ist besser!
barcode  = script(getItemData.bsh), getItemData( "barcode"  , "\(DE-Ch1|DE-105|DE-Zwi2|DE-15\)")
signatur = script(getItemData.bsh), getItemData( "signatur" , "\\.*")

# Ticket #3674
urn=024a:037n:856u, (pattern_map.urly_urn)
pattern_map.urly_urn.pattern_0=^.*(urn:.*)$=>$1

# Ticket #4087
# hierarchytype =
hierarchy_top_id       = script(getParentData.bsh), getParentData(hierarchy_top_id)
hierarchy_top_title    = script(getParentData.bsh), getParentData(hierarchy_top_title)
hierarchy_parent_id    = script(getParentData.bsh), getParentData(parent_id)
hierarchy_parent_title = script(getParentData.bsh), getParentData(parent_title)
# hierarchy_sequence =
is_hierarchy_id        = script(getParentData.bsh), getParentData(is_hierarchy_id)
is_hierarchy_title     = script(getParentData.bsh), getParentData(is_hierarchy_title)
