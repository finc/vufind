/*
 * Copyright (C) 2013 Polichronis Tsolakidis, tsolakidis@ub.uni-leipzig.de
 * Leipzig University Library, Project finc
 * http://www.ub.uni-leipzig.de
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author   Polichronis Tsolakidis
 * @license  http://opensource.org/licenses/gpl-3.0.html GNU General Public License
 * @link     http://finc.info
 */

import org.marc4j.marc.Record;
import org.marc4j.marc.DataField;
import org.marc4j.marc.Subfield;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

org.solrmarc.index.SolrIndexer indexer = null;
static final Logger logger = Logger.getLogger("de.ubl.import.ismn");

/**
* Da in dem Feld '024a' aber auch allerhand andere Sachen stehen (können) -
* siehe Ticket #1538 -, müssen wir genauer unterscheiden.
* Das Beanshell soll den Inhalt von 024a zurückliefern unter folgender
* Bedingung: 1. Indikator = 2
*/
public String getIsmn( Record record ) {

    logger.setLevel( Level.WARNING ); // WARNING,FINE,INFO,ALL and so on

    List fields = record.getVariableFields( "024" );
    if (fields != null) {
        Iterator fieldsIter = fields.iterator();
        while( fieldsIter.hasNext() ) {
            DataField dataField = (DataField) fieldsIter.next();
            List subfields = dataField.getSubfields( 'a' );
            if( subfields != null && !subfields.isEmpty() && dataField.getIndicator1() == '2') {
                Iterator subfieldsIter = subfields.iterator();
                if( subfields != null ) {
                    if( subfieldsIter.hasNext() ) {
                        String data = subfieldsIter.next().getData().toLowerCase();
                        String record_id = indexer.getFirstFieldVal( record, "980a" );
                        logger.info( "FOUND ISMN record_id => " + record_id + ", ismn => " + data);
                        return data;
                    }
                }
            }
        }
    }

    return "";
}
