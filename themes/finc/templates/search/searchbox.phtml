<!-- finc: search - searchbox -->
<?
// Set default value if necessary:
if (!isset($this->searchClassId)) {
  $this->searchClassId = 'Solr';
}

// Load search actions and settings (if any):
$options = $this->searchOptions($this->searchClassId);
$handlers = $this->searchbox()->getHandlers(
  $this->searchClassId,
  isset($this->searchIndex) ? $this->searchIndex : null
);
$handlerCount = count($handlers);
$basicSearch = $this->searchbox()->combinedHandlersActive() ? 'combined-searchbox' : $options->getSearchAction();
$searchHome = $options->getSearchHomeAction();
$advSearch = $options->getAdvancedSearchAction();
$lastSort = $this->searchMemory()->getLastSort($this->searchClassId);
$lastLimit = $this->searchMemory()->getLastLimit($this->searchClassId);
$ignoreHiddenFilterMemory = isset($this->ignoreHiddenFilterMemory) && $this->ignoreHiddenFilterMemory;
$ignoreHiddenFiltersInRequest = isset($this->ignoreHiddenFiltersInRequest) && $this->ignoreHiddenFiltersInRequest;
$hiddenFilters = $this->searchtabs()->getHiddenFilters($this->searchClassId, $ignoreHiddenFilterMemory, $ignoreHiddenFiltersInRequest);
if (empty($hiddenFilters) && !$ignoreHiddenFilterMemory) {
  $hiddenFilters = $this->searchMemory()->getLastHiddenFilters($this->searchClassId);
  if (empty($hiddenFilters)) {
    $hiddenFilters = $this->searchtabs()->getHiddenFilters($this->searchClassId);
  }
}
$hiddenFilterParams = $this->searchtabs()->getCurrentHiddenFilterParams($this->searchClassId, $ignoreHiddenFilterMemory, '?');
?>
<? $searchTabs = $this->searchtabs()->getTabConfig($this->searchClassId, $this->lookfor, $this->searchIndex, $this->searchType, $hiddenFilters); ?>
<? if ($this->searchType == 'advanced'): ?>
  <? /* finc: keep .no-margin-t or advanced search box will be pushed down too far (navbar-form) */ ?>
  <div class="navbar-left flip no-margin-t">
    <? $tabs = $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $searchTabs['tabs']]); ?>
    <? if (!empty($tabs)): ?><?=$tabs?>
    <div class="tab-content clearfix no-gutter-all"><? endif; ?>
      <p class="adv_search_terms"><?=$this->transEsc("Your search terms")?> : "<strong><?=$this->escapeHtml($this->lookfor)?></strong>"</p>
      <? /* finc: we use an ul li list, CK */ ?>
      <ul class="adv_search_links">
        <li><a href="<?=$this->url($advSearch)?>?edit=<?=$this->escapeHtmlAttr($this->searchId)?>"><?=$this->transEsc("Edit this Advanced Search")?></a></li>
        <li><a href="<?=$this->url($advSearch) . $hiddenFilterParams?>"><?=$this->transEsc("Start a new Advanced Search")?></a></li>
        <li><a href="<?=$this->url($searchHome) . $hiddenFilterParams?>"><?=$this->transEsc("Start a new Basic Search")?></a></li>
      </ul>
      <? if (!empty($tabs)): ?></div><? endif; ?>
  </div>
<? else: ?>
  <form id="searchForm" class="searchForm navbar-form navbar-left flip" role="search" method="get" action="<?=$this->url($basicSearch)?>" name="searchForm" autocomplete="off">
    <?=$this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $searchTabs['tabs']]);?>
    <? $placeholder = $this->searchbox()->getPlaceholderText(isset($searchTabs['selected']['id']) ? $searchTabs['selected']['id'] : null); ?>
    <? /* finc: We use a list here, CK */ ?>
    <ul class="navbar-left list-unstyled">
      <li>
        <? /* finc: we use required='required', CK */ ?>
        <input id="searchForm_lookfor"
               class="searchForm_lookfor form-control search-query<? if ($this->searchbox()->autocompleteEnabled($this->searchClassId)): ?> autocomplete searcher:<?=$this->escapeHtmlAttr($this->searchClassId)?><? endif ?>"
               type="text" name="lookfor" value="<?=$this->escapeHtmlAttr($this->lookfor)?>"<? if ($placeholder): ?> placeholder="<?=$this->transEsc($placeholder)?>"<? endif ?> required="required"/>
      </li>
      <? if ($handlerCount > 1): ?>
        <li class="hidden-xs">
          <select id="searchForm_type" class="searchForm_type form-control" name="type" data-native-menu="false">
            <? foreach ($handlers as $handler): ?>
              <option
                value="<?=$this->escapeHtmlAttr($handler['value'])?>"<?=$handler['selected'] ? ' selected="selected"' : ''?>><?=$handler['indent'] ? '-- ' : ''?><?=$this->transEsc($handler['label'])?></option>
            <? endforeach; ?>
          </select>
        </li>
      <? elseif ($handlerCount == 1): ?>
        <input type="hidden" name="type" value="<?=$this->escapeHtmlAttr($handlers[0]['value'])?>"/>
      <? endif; ?>
      <li>
        <button type="submit" class="btn btn-primary"><i class="fa fa-search" aria-hidden="true"></i> <span class="find-label"><?=$this->transEsc("Find")?></span></button>
      </li>
      <? if ($advSearch): ?>
        <li class="hidden-xs">
          <a href="<?=$this->url($advSearch) . ((isset($this->searchId) && $this->searchId) ? '?edit=' . $this->escapeHtmlAttr($this->searchId) : $hiddenFilterParams)?>" class="btn btn-transparent"
             role="button" rel="nofollow"><i class="fa fa-cog"></i> <span class="hidden-xs hidden-sm hidden-md"><?=$this->transEsc("Advanced")?></span></a>
        </li>
      <? endif; ?>
      <li>
        <? if ($geoUrl = $this->geocoords()->getSearchUrl($options)) : ?>
          <a href="<?=$geoUrl?>" class="btn btn-link"><?=$this->transEsc('Geographic Search')?></a>
        <? endif; ?>
      </li>
    </ul>

    <? /* finc: We hide this for small and keep the solution using labels, same below - CK */ ?>
    <div class="checkbox hidden-xs">
      <? $shards = $options->getShards();
      if ($options->showShardCheckboxes() && !empty($shards)): ?>
        <?
        $selectedShards = isset($this->selectedShards)
          ? $this->selectedShards : $options->getDefaultSelectedShards();
        ?>
        <? foreach ($shards as $shard => $val): ?>
          <? $isSelected = empty($selectedShards) || in_array($shard, $selectedShards); ?>
          <input type="checkbox" <?=$isSelected ? 'checked="checked" ' : ''?>name="shard[]" value='<?=$this->escapeHtmlAttr($shard)?>' id='checkbox_<?=$this->escapeHtmlAttr($shard)?>'/> <label for="checkbox_<?=$this->escapeHtmlAttr($shard)?>"><?=$this->transEsc($shard)?></label>
        <? endforeach; ?>
      <? endif; ?>
    </div>

    <?
    $filterDetails = $this->searchbox()->getFilterDetails(
      isset($this->filterList) && is_array($this->filterList) ? $this->filterList : [],
      isset($this->checkboxFilters) && is_array($this->checkboxFilters) ? $this->checkboxFilters : []
    );
    ?>
    <? if ((isset($hasDefaultsApplied) && $hasDefaultsApplied) || !empty($filterDetails)): ?>
      <? $defaultFilterState = $options->getRetainFilterSetting() ? ' checked="checked"' : ''; ?>
      <div class="checkbox">
        <input type="checkbox"<?=$defaultFilterState?> class="searchFormKeepFilters" id="keepfilters">
        <label for="keepfilters">
          <?=$this->transEsc("basic_search_keep_filters")?>
        </label>
      </div>
      <div class="hidden">
        <? foreach ($filterDetails as $current): ?>
          <input class="applied-filter" id="<?=$this->escapeHtmlAttr($current['id'])?>" type="checkbox"<?=$defaultFilterState?> name="filter[]" value="<?=$this->escapeHtmlAttr($current['value'])?>"/>
          <label for="<?=$this->escapeHtmlAttr($current['id'])?>"><?=$this->escapeHtml($current['value'])?></label>
        <? endforeach; ?>
        <? if (isset($hasDefaultsApplied) && $hasDefaultsApplied): ?>
          <!-- this is a hidden element that flags whether or not default filters have been applied;
             it is intentionally unlabeled, as users are not meant to manipulate it directly. -->
          <input class="applied-filter" id="dfApplied" type="checkbox" name="dfApplied" value="1"<?=$defaultFilterState?> />
        <? endif; ?>
      </div>
    <? endif; ?>
    <? foreach ($hiddenFilters as $key => $filter): ?>
      <? foreach ($filter as $value): ?>
        <input type="hidden" name="hiddenFilters[]" value="<?=$this->escapeHtmlAttr($key) . ':' . $this->escapeHtmlAttr($value)?>"/>
      <? endforeach; ?>
    <? endforeach; ?>
    <?
    /* Show hidden field for active search class when in combined handler mode. */
    if ($this->searchbox()->combinedHandlersActive()) {
      echo '<input type="hidden" name="activeSearchClassId" value="' . $this->escapeHtmlAttr($this->searchClassId) . '" />';
    }
    /* Load hidden limit preference from Session */
    if (!empty($lastLimit)) {
      echo '<input type="hidden" name="limit" value="' . $this->escapeHtmlAttr($lastLimit) . '" />';
    }
    if (!empty($lastSort)) {
      echo '<input type="hidden" name="sort" value="' . $this->escapeHtmlAttr($lastSort) . '" />';
    }
    ?>
  </form>
<? endif; ?>
<!-- finc: search - searchbox - END -->
